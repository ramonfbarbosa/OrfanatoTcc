// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrfanatoAPI.Context;

#nullable disable

namespace OrfanatoAPI.Migrations
{
    [DbContext(typeof(OrfanatoContext))]
    [Migration("20221018005033_AdicionandoCampoDeAberturaEFechamentoDoOrfanato")]
    partial class AdicionandoCampoDeAberturaEFechamentoDoOrfanato
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OrfanatoAPI.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("ID_IMAGENS");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasColumnName("IMAGEM_URL");

                    b.Property<int>("OrfanatoId")
                        .HasColumnType("INT")
                        .HasColumnName("ORFANATO_ID");

                    b.HasKey("Id");

                    b.HasIndex("OrfanatoId");

                    b.ToTable("TAB_IMAGENS", (string)null);
                });

            modelBuilder.Entity("OrfanatoAPI.Models.Orphanage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("ID_ORFANATO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AbertoFimDeSemana")
                        .HasColumnType("bit")
                        .HasColumnName("ABERTO_FIM_DE_SEMANA");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("SOBRE");

                    b.Property<string>("AbreAs")
                        .IsRequired()
                        .HasColumnType("VARCHAR(5)")
                        .HasColumnName("ABRE_AS");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("ATIVO");

                    b.Property<string>("FechaAs")
                        .IsRequired()
                        .HasColumnType("VARCHAR(5)")
                        .HasColumnName("FECHA_AS");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("INSTRUCOES");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("LATITUDE");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("NOME");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("WHATSAPP");

                    b.HasKey("Id");

                    b.ToTable("TAB_ORFANATO", (string)null);
                });

            modelBuilder.Entity("OrfanatoAPI.Models.Image", b =>
                {
                    b.HasOne("OrfanatoAPI.Models.Orphanage", null)
                        .WithMany("Imagens")
                        .HasForeignKey("OrfanatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrfanatoAPI.Models.Orphanage", b =>
                {
                    b.Navigation("Imagens");
                });
#pragma warning restore 612, 618
        }
    }
}
